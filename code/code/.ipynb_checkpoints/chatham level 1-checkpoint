{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "d7d5e654",
   "metadata": {},
   "outputs": [],
   "source": [
    "#import necessary packages\n",
    "import platform\n",
    "import os\n",
    "import sys\n",
    "import time\n",
    "#for managing the data\n",
    "import pandas as pd\n",
    "\n",
    "#install !pip install webdriver-manager\n",
    "#webdrivers\n",
    "from selenium import webdriver\n",
    "from selenium.webdriver.chrome.service import Service as ChromeService\n",
    "from webdriver_manager.chrome import ChromeDriverManager\n",
    "from selenium.webdriver.common.by import By\n",
    "\n",
    "from bs4 import BeautifulSoup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3df70c99",
   "metadata": {},
   "outputs": [],
   "source": [
    "#data prefix for output data\n",
    "yearmonth = \"202404\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "d6997359",
   "metadata": {},
   "outputs": [],
   "source": [
    "#open web driver\n",
    "driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "c02b01a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#url\n",
    "base_url_list = \\\n",
    "[\n",
    "    ['Food Premisis',\"https://checkit.chatham-kent.ca/FoodPremises/Table\", ['Facility Name','Site Address','Facility Type','Last Inspection Date']],\n",
    "    ['Personal Service Settings',\"https://checkit.chatham-kent.ca/PersonalServicesSettings/Table\", ['Facility Name','Site Address','Facility Type','Last Inspection Date']],\n",
    "    ['Recreational Water',\"https://checkit.chatham-kent.ca/RecreationalWater/Table\", ['Facility Name','Site Address','Facility Type','Last Inspection Date']],\n",
    "    ['Day Nurseries/Day Cares',\"https://checkit.chatham-kent.ca/DayNurseriesDayCares/Table\",['Facility Name','Site Address','Facility Type','Last Inspection Date']],\n",
    "    ['Recreational Camps',\"https://checkit.chatham-kent.ca/RecreationalCamps/Table\",['Facility Name','Site Address','Facility Type','Last Inspection Date']],\n",
    "    ['Drinking Water',\"https://checkit.chatham-kent.ca/DrinkingWater/Table\",['Facility Name','Site Address','Facility Type','Last Inspection Date']],\n",
    "]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "787c065b-9195-4797-b214-52f7ec382b77",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "1247f93f",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n",
      "C:\\Users\\nanil\\AppData\\Local\\Temp\\ipykernel_21248\\4001557055.py:42: FutureWarning: Passing literal html to 'read_html' is deprecated and will be removed in a future version. To read from a literal string, wrap it in a 'StringIO' object.\n",
      "  df = pd.read_html(driver.page_source)\n"
     ]
    }
   ],
   "source": [
    "#place holder for final dataframe list\n",
    "df_list = []\n",
    "\n",
    "for u in base_url_list:\n",
    "    category = u[0]\n",
    "    base_url = u[1]\n",
    "    columns  = u[2]\n",
    "\n",
    "    #load main landing page\n",
    "    driver.get(base_url)\n",
    "    \n",
    "    try:\n",
    "        #find disclaimer button\n",
    "        disclamer_btn = driver.find_element(by='name', value=\"AcceptDisclaimerButton\")\n",
    "\n",
    "        #click the disclaimer button to move to the data page\n",
    "        disclamer_btn.click()\n",
    "    except:\n",
    "        pass\n",
    "    \n",
    "    # We will loop through until there's no next page button on the webpage\n",
    "    #find next page button\n",
    "    last_page = False\n",
    "\n",
    "    while last_page==False:\n",
    "        try:\n",
    "            next_btn = driver.find_element(By.CLASS_NAME, value=\"next-page-link\")\n",
    "        except:\n",
    "            last_page = True\n",
    "\n",
    "\n",
    "        #place holder for extracted data\n",
    "        data_url_list = []\n",
    "\n",
    "        #locate each table rows\n",
    "        data_rows = driver.find_elements(By.CLASS_NAME, value=\"hovereffect\")\n",
    "\n",
    "        for row in data_rows:\n",
    "            data_url_list.append( row.get_attribute(\"onclick\") )\n",
    "\n",
    "        #convert html table into dataframe\n",
    "        df = pd.read_html(driver.page_source)\n",
    "        df = df[0]\n",
    "        \n",
    "\n",
    "        #rename columns for clean up\n",
    "        df.columns = columns\n",
    "        \n",
    "        #append url column and category column\n",
    "        df['url'] = data_url_list\n",
    "        df['category'] = category\n",
    "\n",
    "        #put aside resulting table\n",
    "        df_list.append(df)\n",
    "\n",
    "        if last_page==True:\n",
    "            break\n",
    "        #move to the next page\n",
    "        next_btn.click()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "ceaeaffe",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_df = pd.concat(df_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f1bce748",
   "metadata": {},
   "outputs": [],
   "source": [
    "final_df.to_csv( \"../data/{}_1st_table.csv\".format(yearmonth) )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e568037c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#close webdriver\n",
    "try:\n",
    "    driver.close()\n",
    "except:\n",
    "    pass"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "d7df1bde",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Facility Name</th>\n",
       "      <th>Site Address</th>\n",
       "      <th>Facility Type</th>\n",
       "      <th>Last Inspection Date</th>\n",
       "      <th>url</th>\n",
       "      <th>category</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>18 Wheeler Restaurant</td>\n",
       "      <td>3613 Queen's Line  Tilbury ON N0P 2L0</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>06-Dec-2023</td>\n",
       "      <td>location.href = '/Facility/Details/abecbce9-6c...</td>\n",
       "      <td>Food Premisis</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>7-Eleven</td>\n",
       "      <td>10 Grand Ave W  Chatham ON N7L 1B5</td>\n",
       "      <td>Food Take Out</td>\n",
       "      <td>26-Jan-2024</td>\n",
       "      <td>location.href = '/Facility/Details/467840e9-ed...</td>\n",
       "      <td>Food Premisis</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>A Taste of Britain</td>\n",
       "      <td>549 Queen St  Chatham ON N7M 2J6</td>\n",
       "      <td>Food Store/Food Sales (Convenience/Variety)</td>\n",
       "      <td>28-Feb-2024</td>\n",
       "      <td>location.href = '/Facility/Details/6d29cf97-6a...</td>\n",
       "      <td>Food Premisis</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>A Taste Of Home</td>\n",
       "      <td>93 English Street  Blenheim ON N0P 1A0</td>\n",
       "      <td>Food Take Out</td>\n",
       "      <td>31-Oct-2023</td>\n",
       "      <td>location.href = '/Facility/Details/e9492607-f0...</td>\n",
       "      <td>Food Premisis</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>A&amp;W</td>\n",
       "      <td>505 Grand Avenue W  Chatham ON N7L 1C5</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>17-Jan-2024</td>\n",
       "      <td>location.href = '/Facility/Details/9306d8a5-c7...</td>\n",
       "      <td>Food Premisis</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Small Drinking Water System</td>\n",
       "      <td>The New St. Andrew's Presbyterian Church-SDWS</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8314 St Andrew's Line  Chatham ON N7M 5J8</td>\n",
       "      <td>location.href = '/Facility/Details/293b7a15-b5...</td>\n",
       "      <td>Drinking Water</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Small Drinking Water System</td>\n",
       "      <td>Turin United Church-SDWS</td>\n",
       "      <td>NaN</td>\n",
       "      <td>14188 Turin Line  Thamesville ON N0P 2K0</td>\n",
       "      <td>location.href = '/Facility/Details/df691593-5b...</td>\n",
       "      <td>Drinking Water</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Small Drinking Water System</td>\n",
       "      <td>Union Baptist Church-SDWS</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10586 Union Line  Dresden ON N0P 1M0</td>\n",
       "      <td>location.href = '/Facility/Details/1b7ca21d-dd...</td>\n",
       "      <td>Drinking Water</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Small Drinking Water System</td>\n",
       "      <td>Wabash Sportsman Club-SDWS</td>\n",
       "      <td>NaN</td>\n",
       "      <td>114453 Base Line  Thamesville ON N0P 1M0</td>\n",
       "      <td>location.href = '/Facility/Details/a384bcf3-f1...</td>\n",
       "      <td>Drinking Water</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Small Drinking Water System</td>\n",
       "      <td>Wabash United Church-SDWS</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12305 Wabash Line  Wabash ON N0P 2K0</td>\n",
       "      <td>location.href = '/Facility/Details/5fe7f825-73...</td>\n",
       "      <td>Drinking Water</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1119 rows × 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Facility Name  \\\n",
       "0         18 Wheeler Restaurant   \n",
       "1                      7-Eleven   \n",
       "2            A Taste of Britain   \n",
       "3               A Taste Of Home   \n",
       "4                           A&W   \n",
       "..                          ...   \n",
       "23  Small Drinking Water System   \n",
       "24  Small Drinking Water System   \n",
       "0   Small Drinking Water System   \n",
       "1   Small Drinking Water System   \n",
       "2   Small Drinking Water System   \n",
       "\n",
       "                                     Site Address  \\\n",
       "0           3613 Queen's Line  Tilbury ON N0P 2L0   \n",
       "1              10 Grand Ave W  Chatham ON N7L 1B5   \n",
       "2                549 Queen St  Chatham ON N7M 2J6   \n",
       "3          93 English Street  Blenheim ON N0P 1A0   \n",
       "4          505 Grand Avenue W  Chatham ON N7L 1C5   \n",
       "..                                            ...   \n",
       "23  The New St. Andrew's Presbyterian Church-SDWS   \n",
       "24                       Turin United Church-SDWS   \n",
       "0                       Union Baptist Church-SDWS   \n",
       "1                      Wabash Sportsman Club-SDWS   \n",
       "2                       Wabash United Church-SDWS   \n",
       "\n",
       "                                  Facility Type  \\\n",
       "0                                    Restaurant   \n",
       "1                                 Food Take Out   \n",
       "2   Food Store/Food Sales (Convenience/Variety)   \n",
       "3                                 Food Take Out   \n",
       "4                                    Restaurant   \n",
       "..                                          ...   \n",
       "23                                          NaN   \n",
       "24                                          NaN   \n",
       "0                                           NaN   \n",
       "1                                           NaN   \n",
       "2                                           NaN   \n",
       "\n",
       "                         Last Inspection Date  \\\n",
       "0                                 06-Dec-2023   \n",
       "1                                 26-Jan-2024   \n",
       "2                                 28-Feb-2024   \n",
       "3                                 31-Oct-2023   \n",
       "4                                 17-Jan-2024   \n",
       "..                                        ...   \n",
       "23  8314 St Andrew's Line  Chatham ON N7M 5J8   \n",
       "24   14188 Turin Line  Thamesville ON N0P 2K0   \n",
       "0        10586 Union Line  Dresden ON N0P 1M0   \n",
       "1    114453 Base Line  Thamesville ON N0P 1M0   \n",
       "2        12305 Wabash Line  Wabash ON N0P 2K0   \n",
       "\n",
       "                                                  url        category  \n",
       "0   location.href = '/Facility/Details/abecbce9-6c...   Food Premisis  \n",
       "1   location.href = '/Facility/Details/467840e9-ed...   Food Premisis  \n",
       "2   location.href = '/Facility/Details/6d29cf97-6a...   Food Premisis  \n",
       "3   location.href = '/Facility/Details/e9492607-f0...   Food Premisis  \n",
       "4   location.href = '/Facility/Details/9306d8a5-c7...   Food Premisis  \n",
       "..                                                ...             ...  \n",
       "23  location.href = '/Facility/Details/293b7a15-b5...  Drinking Water  \n",
       "24  location.href = '/Facility/Details/df691593-5b...  Drinking Water  \n",
       "0   location.href = '/Facility/Details/1b7ca21d-dd...  Drinking Water  \n",
       "1   location.href = '/Facility/Details/a384bcf3-f1...  Drinking Water  \n",
       "2   location.href = '/Facility/Details/5fe7f825-73...  Drinking Water  \n",
       "\n",
       "[1119 rows x 6 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "final_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9280a52d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4053b95a",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
